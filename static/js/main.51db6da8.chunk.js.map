{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearcChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"+JAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCWCQ,EAfE,SAAC,GAAa,EAAZC,OAGf,MAAM,IAAIC,MAAM,WCKLC,EATG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKC,UAAU,mCAAf,SACI,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,OCWxDK,EAdA,SAACC,GACZ,OACI,qBAAKC,MACD,CACIC,SAAS,SACTC,OAAQ,kBACRC,OAAQ,SAJhB,SAOKJ,EAAMK,YCYJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,8DAOAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAKxB,OAAGG,KAAKJ,MAAMC,SACH,yCAEJG,KAAKX,MAAMK,a,GAjBEQ,aCyDbC,E,kDAnDX,aAAc,IAAD,8BACT,gBAiBJC,cAAgB,SAACC,GACb,EAAKJ,SAAS,CAACnB,YAAauB,EAAMC,OAAOC,SAjBzC,EAAKX,MAAQ,CACTjB,OAAQ,GACRG,YAAa,IAJR,E,gEAQO,IAAD,OACf0B,MAAM,8CACLpC,MAAK,SAAAqC,GACF,OAAOA,EAASC,UAEnBtC,MAAK,SAAAuC,GACF,EAAKV,SAAS,CAACtB,OAAQgC,S,+BAStB,IAAD,EACyBX,KAAKJ,MAA3BjB,EADH,EACGA,OAAOG,EADV,EACUA,YACR8B,EAAiBjC,EAAOkC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASnC,EAAYkC,kBAEzD,OAAqB,IAAlBrC,EAAOuC,OACC,yCAIP,sBAAKlC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,gBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQiC,e,GAvCxBV,a,MCClBiB,IAASC,OACL,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM5BrD,M","file":"static/js/main.51db6da8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\n  if(true){\n    throw new Error('Nooooo');\n  }\n    const cardComponent = robots.map((user,i) =>{\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\n    })\n    return(\n    <div>\n      {cardComponent}\n    </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield,searchChange}) => {\n    return(\n        <div className=\"pa3 ba b--green bg-lightest-blue\">\n            <input type=\"search\" placeholder=\"search robots\" onChange={searchChange}/>\n        </div>\n        \n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n        <div style={\n            {\n                overflow:'scroll',\n                border: '1px solid black',\n                height: '500px'\n            }\n        }>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React,{Component} from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError:true})\n    }\n\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Ooooops</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => {\n            return response.json();\n        })\n        .then(users => {\n            this.setState({robots: users})\n        });\n    }\n\n    onSearcChange = (event) => {\n        this.setState({searchfield: event.target.value})\n        \n    }\n\n    render(){\n        const {robots,searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        if(robots.length === 0){\n            return <h1>loading</h1>\n        }\n        else{\n            return(\n            <div className=\"tc\">    \n                <h1>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearcChange}/>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundary>\n                </Scroll>\n                \n            </div>\n            \n        );\n        }\n        \n    }\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App />\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}